"use strict";(self.webpackChunkevandrofalleirosgh=self.webpackChunkevandrofalleirosgh||[]).push([[8832],{3905:(e,a,o)=>{o.d(a,{Zo:()=>m,kt:()=>v});var s=o(7294);function r(e,a,o){return a in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o,e}function t(e,a){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);a&&(s=s.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),o.push.apply(o,s)}return o}function i(e){for(var a=1;a<arguments.length;a++){var o=null!=arguments[a]?arguments[a]:{};a%2?t(Object(o),!0).forEach((function(a){r(e,a,o[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):t(Object(o)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(o,a))}))}return e}function n(e,a){if(null==e)return{};var o,s,r=function(e,a){if(null==e)return{};var o,s,r={},t=Object.keys(e);for(s=0;s<t.length;s++)o=t[s],a.indexOf(o)>=0||(r[o]=e[o]);return r}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(s=0;s<t.length;s++)o=t[s],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=s.createContext({}),d=function(e){var a=s.useContext(l),o=a;return e&&(o="function"==typeof e?e(a):i(i({},a),e)),o},m=function(e){var a=d(e.components);return s.createElement(l.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return s.createElement(s.Fragment,{},a)}},c=s.forwardRef((function(e,a){var o=e.components,r=e.mdxType,t=e.originalType,l=e.parentName,m=n(e,["components","mdxType","originalType","parentName"]),p=d(o),c=r,v=p["".concat(l,".").concat(c)]||p[c]||u[c]||t;return o?s.createElement(v,i(i({ref:a},m),{},{components:o})):s.createElement(v,i({ref:a},m))}));function v(e,a){var o=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var t=o.length,i=new Array(t);i[0]=c;var n={};for(var l in a)hasOwnProperty.call(a,l)&&(n[l]=a[l]);n.originalType=e,n[p]="string"==typeof e?e:r,i[1]=n;for(var d=2;d<t;d++)i[d]=o[d];return s.createElement.apply(null,i)}return s.createElement.apply(null,o)}c.displayName="MDXCreateElement"},7400:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>n,toc:()=>d});var s=o(7462),r=(o(7294),o(3905));const t={sidebar_position:3},i="Tipos de Dados e Vari\xe1veis",n={unversionedId:"js-linguagem/tipos-dados-variaveis",id:"js-linguagem/tipos-dados-variaveis",title:"Tipos de Dados e Vari\xe1veis",description:"Nossos projetos em JavaScript sempre envolver\xe3o a manipula\xe7\xe3o de dados para a gera\xe7\xe3o de informa\xe7\xf5es. Supomos, dessa forma, que os usu\xe1rios dos sistemas que voc\xea ir\xe1 implementar sempre fornecer\xe3o dados e ir\xe3o interagir com os elementos visuais dispostos. Essa intera\xe7\xe3o pode e deve ser manipulada por meio de JavaScript.",source:"@site/docs/js-linguagem/tipos-dados-variaveis.md",sourceDirName:"js-linguagem",slug:"/js-linguagem/tipos-dados-variaveis",permalink:"/docs/js-linguagem/tipos-dados-variaveis",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/js-linguagem/tipos-dados-variaveis.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Ferramentas necess\xe1rias",permalink:"/docs/js-linguagem/ferramentas"},next:{title:"Operadores Aritm\xe9ticos",permalink:"/docs/js-linguagem/tipos/operadores-matematicos"}},l={},d=[{value:"Estudo de caso",id:"estudo-de-caso",level:2},{value:"Vari\xe1veis",id:"vari\xe1veis",level:2},{value:"Declara\xe7\xe3o de Vari\xe1veis",id:"declara\xe7\xe3o-de-vari\xe1veis",level:3},{value:"Nomeando Vari\xe1veis",id:"nomeando-vari\xe1veis",level:3},{value:"Atribui\xe7\xe3o de vari\xe1veis",id:"atribui\xe7\xe3o-de-vari\xe1veis",level:3},{value:"Tipos de dados",id:"tipos-de-dados",level:2},{value:"Tipos de dados primitivos",id:"tipos-de-dados-primitivos",level:3},{value:"String",id:"string",level:3},{value:"Templates Strings",id:"templates-strings",level:3},{value:"Number",id:"number",level:3},{value:"Boolean",id:"boolean",level:3},{value:"Undefined",id:"undefined",level:3},{value:"Null",id:"null",level:3},{value:"Symbol",id:"symbol",level:3},{value:"Objeto",id:"objeto",level:3},{value:"Conclus\xe3o",id:"conclus\xe3o",level:3}],m={toc:d},p="wrapper";function u(e){let{components:a,...t}=e;return(0,r.kt)(p,(0,s.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tipos-de-dados-e-vari\xe1veis"},"Tipos de Dados e Vari\xe1veis"),(0,r.kt)("p",null,"Nossos projetos em JavaScript sempre envolver\xe3o a manipula\xe7\xe3o de dados para a gera\xe7\xe3o de informa\xe7\xf5es. Supomos, dessa forma, que os usu\xe1rios dos sistemas que voc\xea ir\xe1 implementar sempre fornecer\xe3o dados e ir\xe3o interagir com os elementos visuais dispostos. Essa intera\xe7\xe3o pode e deve ser manipulada por meio de JavaScript. "),(0,r.kt)("p",null,"A seguir, vamos definir, inicialmente, um estudo de caso para que possamos, ent\xe3o, imergir nos aspectos t\xe9cnicos da linguagem."),(0,r.kt)("h2",{id:"estudo-de-caso"},"Estudo de caso"),(0,r.kt)("p",null,"Para ficar mais f\xe1cil de compreendermos o b\xe1sico da linguagem JavaScript, vamos assumir o seguinte projeto de desenvolvimento web:"),(0,r.kt)("admonition",{title:"Projeto",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Voc\xea foi contratado(a) para implementar uma plataforma web que possibilita a venda online (delivery) de saladas. O contratante (dono do Delivery) precisa, por exemplo, cadastrar todas as saladas que comp\xf5em o seu card\xe1pio. Os seus cliente, por sua vez, fazem pedidos online analisando esse card\xe1pio")),(0,r.kt)("p",null,"Para esse exemplo, podemos imaginar algumas funcionalidades essenciais. Vamos elencar apenas 3 (tr\xeas) para fins did\xe1ticos:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"O sistema deve permitir o ",(0,r.kt)("em",{parentName:"li"},"cadastramento de ingredientes"),";"),(0,r.kt)("li",{parentName:"ul"},"O sistema deve permitir o ",(0,r.kt)("em",{parentName:"li"},"cadastramento de saladas"),";"),(0,r.kt)("li",{parentName:"ul"},"O sistema deve permitir a ",(0,r.kt)("em",{parentName:"li"},"venda de saladas"),".")),(0,r.kt)("p",null,"N\xe3o pense muito nas demais a\xe7\xf5es e funcionalidades poss\xedveis, pois, essas 3 (tr\xeas) j\xe1 v\xe3o nos render diversos exemplos de implementa\xe7\xe3o. Por enquanto, a ideia \xe9 isolar um problema e resolv\xea-lo separadamente. Isso ajuda na resolu\xe7\xe3o do todo"),(0,r.kt)("p",null,"Ent\xe3o, com essas funcionalidades em mente, vamos pensar em um prot\xf3tipo visual. \xc9 importante, nesse momento, imaginarmos como o dono do Delivery ir\xe1 utilizar essas funcionalidades em seus dispositivos. Vamos assumir que ele ir\xe1 fazer tudo do seu celular. "),(0,r.kt)("p",null,"Observe o prot\xf3tipo a seguir:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"prot\xf3tipo visual dallas app",src:o(421).Z,title:"Prot\xf3tipo visual",width:"1506",height:"1502"})),(0,r.kt)("p",null,"Neste prot\xf3tipo, as interfaces gr\xe1ficas dispostas contemplas as funcionalidades de cadastramento e venda de saladas. Apesar do visual complexo, a entrada de dados para ambas funcionalidades ser\xe1 simplificada. "),(0,r.kt)("admonition",{title:"Entrada de dados",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Nesse contexo, a ",(0,r.kt)("strong",{parentName:"p"},"entrada de dados")," \xe9 o processo de inser\xe7\xe3o de dados em um sistema, aplicativo ou programa de computador para que estes possam ser ",(0,r.kt)("strong",{parentName:"p"},"processados, armazenados ou utilizados")," de alguma forma. A entrada de dados pode ser feita de diversas formas, como digita\xe7\xe3o manual, leitura de c\xf3digos de barras, reconhecimento \xf3ptico de caracteres, importa\xe7\xe3o de arquivos, dentre outros. Fique tranquilo que teremos logo mais uma se\xe7\xe3o espec\xedfica para lidar com a entrada de dados em JavaScript.")),(0,r.kt)("h2",{id:"vari\xe1veis"},"Vari\xe1veis"),(0,r.kt)("p",null,"Como mencionamos anteriormente, a entrada de dados \xe9 essencial para que tenhamos dados para processar. Mas, os dados inseridos por um usu\xe1rio precisam ser armazenados em algum lugar do dispositivo que est\xe1 executando o seu programa."),(0,r.kt)("p",null,"Para o exemplo da plataforma de ",(0,r.kt)("em",{parentName:"p"},"delivery")," que estamos lidando, adicionei a informa\xe7\xe3o de que o usu\xe1rio tende a usar um celular/smartphone para a entrada de dados. Vamos avaliar esse processo de entrada de dados para o ",(0,r.kt)("em",{parentName:"p"},"cadastramento de uma nova salada")," no sistema."),(0,r.kt)("p",null,"Uma ",(0,r.kt)("strong",{parentName:"p"},"Salada")," no sistema tem as seguintes propriedades:"),(0,r.kt)("mermaid",{value:"classDiagram\n    class Salada{\n      String nome\n      String ingredientes\n      Number valor\n    }"}),(0,r.kt)("admonition",{title:"Aten\xe7\xe3o",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"No exemplo, a defini\xe7\xe3o da estrutura ",(0,r.kt)("strong",{parentName:"p"},"Salada")," est\xe1 simplificada, seja por conta das ",(0,r.kt)("strong",{parentName:"p"},"propriedades"),", seja por conta dos ",(0,r.kt)("strong",{parentName:"p"},"tipos de dados")," envolvidos. No prot\xf3tipo apresentado, tamb\xe9m \xe9 poss\xedvel que o usu\xe1rio coloque uma foto para cada salada, selecione ingredientes de uma lista e, at\xe9 mesmo, cadastre poss\xedveis tamanhos/por\xe7\xf5es. Mas, a ideia \xe9 simplificar os exemplos inciais. Os tipos de dados poss\xedveis em JavaScript ser\xe3o descritos em breve.  ")),(0,r.kt)("p",null,"Enfim, as propriedades ",(0,r.kt)("strong",{parentName:"p"},"nome"),", ",(0,r.kt)("strong",{parentName:"p"},"ingredientes")," e ",(0,r.kt)("strong",{parentName:"p"},"valor")," s\xe3o inseridas e devem ser armazenadas. Com estamos lidando com um software, para cada processamento imagin\xe1vel que envolver\xe1 esses dados, vamos considerar que tais dados s\xe3o armazenados na mem\xf3ria do dispositivo. Para isso, vamos pensar nessa mem\xf3ria como sendo uma estantes com v\xe1rios nichos, como na imagem a seguir:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Vari\xe1veis",src:o(5140).Z,title:"Vari\xe1veis",width:"2048",height:"1192"})),(0,r.kt)("p",null,"A estante com nichos ",(0,r.kt)("strong",{parentName:"p"},"(A)"),", na vida real, pode acondicionar diversos itens, cada um disposto em um nicho espec\xedfico. Pensando em organiza\xe7\xe3o, podemos at\xe9 colocar uma etiqueta de identifica\xe7\xe3o ",(0,r.kt)("strong",{parentName:"p"},"(B)")," em cada nicho, para que fique mais f\xe1cil a identifica\xe7\xe3o ou categoriza\xe7\xe3o dos itens que ficar\xe3o guardados nessa estante. Ent\xe3o, se algu\xe9m me diz que guardou uma mochila no ",(0,r.kt)("em",{parentName:"p"},"nicho 13"),", eu sei onde encontrar esse item dentre os diversos outros que podem estar ali. "),(0,r.kt)("p",null,"Como analogia para nossos sistema de ",(0,r.kt)("em",{parentName:"p"},"delivery"),", a parte ",(0,r.kt)("strong",{parentName:"p"},"(C)")," da imagem tem a mesma proposta da estante com nichos. Pegamos para n\xf3s os 3 primeiros nichos, guardamos os valores ",(0,r.kt)("strong",{parentName:"p"},"nome"),", ",(0,r.kt)("strong",{parentName:"p"},"ingredientes")," e ",(0,r.kt)("strong",{parentName:"p"},"valor"),' e os "etiquetamos", para sabermos exatamente o que guardamos ali. Al\xe9m de saber o que guardamos, anotamos o tipo de item que foi armazenado. Cada um desses espa\xe7os pode ser chamado de ',(0,r.kt)("strong",{parentName:"p"},"vari\xe1vel"),". Al\xe9m disso, cada ",(0,r.kt)("strong",{parentName:"p"},"vari\xe1vel")," tem um ",(0,r.kt)("strong",{parentName:"p"},"tipo de dado")," atribu\xeddo."),(0,r.kt)("p",null,"Na estante, ou melhor, na mem\xf3ria de nosso dispositivo, temos o seguinte:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A vari\xe1vel ",(0,r.kt)("strong",{parentName:"li"},"nome"),", que \xe9 do tipo ",(0,r.kt)("strong",{parentName:"li"},"String"),' (valor de texto), armazena o valor "Dallas 1";'),(0,r.kt)("li",{parentName:"ul"},"A vari\xe1vel ",(0,r.kt)("strong",{parentName:"li"},"ingredientes"),", que \xe9 do tipo ",(0,r.kt)("strong",{parentName:"li"},"String"),' (valor de texto), armazena os ingredientes "Alface; Tomate; Cebola";'),(0,r.kt)("li",{parentName:"ul"},"A vari\xe1vel ",(0,r.kt)("strong",{parentName:"li"},"valor"),", que \xe9 do tipo ",(0,r.kt)("strong",{parentName:"li"},"Number"),' (valor num\xe9rico), armazena o valor "10.99";')),(0,r.kt)("admonition",{title:"TIPOS DE DADOS",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Os tipos de dados que foram mencionados, juntamente com outros tipos, ser\xe3o descritos e explicados em breve. Agora, apenas entenda que cada dado armazenado em uma vari\xe1vel tem um tipo.")),(0,r.kt)("p",null,"Agora, depois desse exemplo e das analogias utilizadas, vamos definir formalmente o que \xe9 uma ",(0,r.kt)("strong",{parentName:"p"},"vari\xe1vel"),". As vari\xe1veis s\xe3o elementos fundamentais em qualquer linguagem de programa\xe7\xe3o, incluindo JavaScript. Elas permitem que n\xf3s programadores consigamos armazenar e manipular dados durante a execu\xe7\xe3o do c\xf3digo. Esse armazenamento pode ser feito na Mem\xf3ria RAM, por exemplo. Um navegador web consegue, por meio da linguagem JavaScript, acessar os valores destas vari\xe1veis sempre que preciso. "),(0,r.kt)("p",null,"Logo mais, aprenderemos a declarar essas vari\xe1veis em JavaScript, para que consigamos armazenar e utilizar os dados que queremos processar. "),(0,r.kt)("h3",{id:"declara\xe7\xe3o-de-vari\xe1veis"},"Declara\xe7\xe3o de Vari\xe1veis"),(0,r.kt)("p",null,"Existem tr\xeas maneiras de declarar uma vari\xe1vel em JavaScript:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"let"),": Em JavaScript, a sintaxe mais adequada para declarar uma vari\xe1vel \xe9 usando a palavra-chave ",(0,r.kt)("em",{parentName:"p"},"let")," seguida pelo nome da vari\xe1vel. Essa palavra-chave \xe9 usada para declarar uma vari\xe1vel cujo valor pode ser alterado posteriormente."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let valorSalada = 30;\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"const"),": Essa palavra-chave \xe9 usada para declarar uma vari\xe1vel cujo valor n\xe3o pode ser alterado posteriormente. Uma vez declarada, a vari\xe1vel torna-se imut\xe1vel"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const PI = 3.14;\n\nPI = 10; // opera\xe7\xe3o proibida, pois n\xe3o h\xe1 como alterar um valor constante (const)\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"var"),": Essa palavra-chave tamb\xe9m pode ser utilizada para a defini\xe7\xe3o de vari\xe1veis, mas, atualmente, \xe9 considerada obsoleta e recomenda-se a sua substitui\xe7\xe3o por let."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var valorSalada = 30; // em desuso\n")))),(0,r.kt)("admonition",{title:"Coment\xe1rios de c\xf3digo",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Nestes 2 \xfaltimos exemplos de declara\xe7\xe3o de vari\xe1veis, colocamos um coment\xe1rio de texto utilizando os s\xedmbolos ",(0,r.kt)("strong",{parentName:"p"},"//"),". Tudo que est\xe1 escrito ap\xf3s ",(0,r.kt)("strong",{parentName:"p"},"//")," n\xe3o \xe9 interpretado durante a execu\xe7\xe3o do c\xf3digo. O texto \xe9 compreendido como sendo um ",(0,r.kt)("strong",{parentName:"p"},"coment\xe1rio")," de c\xf3digo, para que possamos lembrar o que est\xe1 sendo executado em um dado momento.  "),(0,r.kt)("p",{parentName:"admonition"},"Tamb\xe9m \xe9 poss\xedvel comentarmos c\xf3digo com ",(0,r.kt)("strong",{parentName:"p"},"/* */")," quando precisamos criar coment\xe1rios com mais de uma linha de texto. Ex:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"/*\n    O valor de cada salada \xe9 armazenado\n    na vari\xe1vel valorSalada. Os valores\n    reais podem ser conferidos no arquivo\n    tabela.pdf\n*/\nvar valorSalada = 30; \n"))),(0,r.kt)("h3",{id:"nomeando-vari\xe1veis"},"Nomeando Vari\xe1veis"),(0,r.kt)("p",null,"As vari\xe1veis em JavaScript podem ter qualquer nome atribu\xeddo, desde que algumas regras sejam respeitadas: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Comece os nomes de vari\xe1veis com uma letra, underscore (_) ou cifr\xe3o ($);"),(0,r.kt)("li",{parentName:"ul"},"N\xfameros n\xe3o s\xe3o permitidos como primeiro caractere na nomea\xe7\xe3o de uma vari\xe1vel; "),(0,r.kt)("li",{parentName:"ul"},"As vari\xe1veis s\xe3o sens\xedveis a mai\xfasculas e min\xfasculas. A vari\xe1vel ",(0,r.kt)("strong",{parentName:"li"},"nomeSalada")," \xe9 diferente da vari\xe1vel ",(0,r.kt)("strong",{parentName:"li"},"NomeSalada"),";"),(0,r.kt)("li",{parentName:"ul"},"N\xe3o podemos criar vari\xe1veis utilizando palavras reservadas da linguagem, como: double, else, case, cath, if, long, new, short, let. Esses nomes s\xe3o de uso exclusivo da linguagem. ")),(0,r.kt)("p",null,"O exemplo a seguir demonstra nomea\xe7\xf5es de vari\xe1veis permitidas: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let nomeSalada = "Salada Dallas Magnifiqu\xe9";\nlet nome_salada = "Salada Dallas Magnifiqu\xe9";\nlet _preco = 25;\nlet $preco = 19.99;\n')),(0,r.kt)("h3",{id:"atribui\xe7\xe3o-de-vari\xe1veis"},"Atribui\xe7\xe3o de vari\xe1veis"),(0,r.kt)("p",null,"Atribui\xe7\xe3o de Vari\xe1veis\nAp\xf3s declarar uma vari\xe1vel, podemos atribuir um valor a ela usando o operador de atribui\xe7\xe3o =."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let nomeSalada = "Salada Dallas Prime";\n')),(0,r.kt)("h2",{id:"tipos-de-dados"},"Tipos de dados"),(0,r.kt)("p",null,"Voc\xea deve ter observado nos exemplos anteriores que as vari\xe1veis criadas durante a atribui\xe7\xe3o (sinal =) receberam valores com formatos distintos, como os exemplos a seguir:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let nomeSalada = "Salada Dallas Prime";\nlet precoSalada = 30.99;\n')),(0,r.kt)("p",null,"Por meio da palavra reservada ",(0,r.kt)("strong",{parentName:"p"},"let")," conseguimos criar duas vari\xe1veis, uma chamada ",(0,r.kt)("strong",{parentName:"p"},"nomeSalada")," e outra chamada ",(0,r.kt)("strong",{parentName:"p"},"precoSalada"),'. Para a primeira vari\xe1vel, o valor atribu\xeddo \xe9 "Salada Dallas Primer", com aspas duplas. J\xe1 na vari\xe1vel seguinte, o valor atribu\xeddo \xe9 um valor num\xe9rico decimal. Consegue perceber que s\xe3o dados com tipos distintos? Um valor \xe9 textual, o outro \xe9 num\xe9rico.'),(0,r.kt)("p",null,"Se eu precisar, em algum momento, calcular quanto o cliente deve pagar em seu pedido, supondo que ele pediu 3 saladas distintas, sabemos que o pre\xe7o de cada uma das saladas escolhidas deve ser considerado. O pre\xe7o final para o cliente, nesse exemplo, seria algo como:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Pre\xe7o Final")," =  pre\xe7o da Salada 1 + pre\xe7o da Salada 2 + pre\xe7o da Salada 3 ")),(0,r.kt)("p",null,"Note que estamos realizando uma opera\xe7\xe3o de soma entre estes 3 valores. Como ser\xe1 a linguagem JavaScript que far\xe1 essa opera\xe7\xe3o, vamos assumir que:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A linguagem deve conseguir armazenar vari\xe1veis cujo conte\xfado \xe9 um valor num\xe9rico;"),(0,r.kt)("li",{parentName:"ul"},"A linguagem deve conseguir realizar opera\xe7\xf5es matem\xe1ticas com estes valores num\xe9ricos.")),(0,r.kt)("p",null,"Nessa breve an\xe1lise, j\xe1 podemos inferir que:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Tipos de dados s\xe3o importantes para cada uma das vari\xe1veis criadas;"),(0,r.kt)("li",{parentName:"ul"},"Opera\xe7\xf5es matem\xe1ticas (soma, subtra\xe7\xe3o, multiplica\xe7\xe3o, divis\xe3o, dentre outras) devem ser realizadas por meio de operadores espec\xedficos.")),(0,r.kt)("p",null,"Ent\xe3o, vamos entender como JavaScript lida com estas situa\xe7\xf5es. Aqui j\xe1 lhe informamos que JavaScript \xe9 uma linguagem de programa\xe7\xe3o ",(0,r.kt)("strong",{parentName:"p"},"dinamicamente tipada"),", o que significa que os ",(0,r.kt)("strong",{parentName:"p"},"tipos de dados")," s\xe3o determinados automaticamente em tempo de execu\xe7\xe3o, conforme um valor \xe9 atribu\xeddo a uma vari\xe1vel. Essa \xe9 a regra e apenas a aceitamos. "),(0,r.kt)("p",null,"No exemplo das vari\xe1veis nomeSalada e precoSalada observamos que, em momento algum, eu especifiquei o tipo de dados desejado. Eu apenas atribui valores ap\xf3s o sinal igual(=). A tipagem (defini\xe7\xe3o de tipo) foi feita automaticamente pela linguagem. Em outra linguagens de programa\xe7\xe3o, como C#, por exemplo, a tipagem j\xe1 \xe9 de nossa responsabilidade, como no exemplo a seguir:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"float valorSalada = 30.99;\n")),(0,r.kt)("p",null,"Nesse exemplo, a palavra reservada ",(0,r.kt)("strong",{parentName:"p"},"float"),' vem antes do nome da vari\xe1vel para indicar que o valor atribu\xeddo \xe9 um valor num\xe9rico de ponto flutuante (valor decimal). Mas, n\xe3o se preocupe com as outras linguagens agora. S\xf3 assuma que JavaScript lhe d\xe1 essa "colher de ch\xe1".'),(0,r.kt)("h3",{id:"tipos-de-dados-primitivos"},"Tipos de dados primitivos"),(0,r.kt)("p",null,"Em JavaScript, os tipos de dados primitivos (pr\xe9-definidos para a linguagem) s\xe3o os seguintes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"string\nnumber\nboolean\nundefined\nnull\nsymbol\nobject\n")),(0,r.kt)("h3",{id:"string"},"String"),(0,r.kt)("p",null,"Strings, em JavaScript, s\xe3o sequ\xeancias de caracteres (texto em geral). A representa\xe7\xe3o de Strings em JavaScript se d\xe1 por meio da utiliza\xe7\xe3o de aspas simples ou aspas duplas. "),(0,r.kt)("p",null,"Exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"'Texto qualquer' // string com 14 caracteres (espa\xe7o conta como um caractere)\n\"Texto qualquer\" // tamb\xe9m \xe9 uma string\n'Texto ' + 'qualquer' // concatena\xe7\xe3o de Strings\n\nlet mensagem = \"Compra realizada com sucesso!\"; // string atribu\xedda \xe0 vari\xe1vel mensagem\n")),(0,r.kt)("p",null,"As Strings s\xe3o objetos JavaScript que tamb\xe9m tem diversas funcionalidades extras implementadas que nos auxiliam a manipular textos. Ex:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'"ol\xe1".charAt(0) // retorna a letra \'o\'\n"ol\xe1, mundo".replace("ol\xe1", "adeus") // retorna \'adeus, mundo\'\n"ol\xe1".toUpperCase() // retorna OL\xc1\n')),(0,r.kt)("h3",{id:"templates-strings"},"Templates Strings"),(0,r.kt)("p",null,"As Templates Strings em JavaScript, tamb\xe9m conhecidas como ",(0,r.kt)("em",{parentName:"p"},"template literals"),", s\xe3o uma forma de criar strings de texto que permitem incorporar express\xf5es JavaScript em seu conte\xfado. Eles foram introduzidos no ES6 (tamb\xe9m conhecido como ECMAScript 2015) e s\xe3o uma maneira mais conveniente e leg\xedvel de criar strings complexas em compara\xe7\xe3o com as strings padr\xe3o de JavaScript."),(0,r.kt)("p",null,"Para criar uma template string, voc\xea usa a sintaxe de crase (``) em vez de aspas simples ou duplas. Dentro de uma template string, voc\xea pode usar a sintaxe ${} para incorporar express\xf5es JavaScript."),(0,r.kt)("p",null,"Por exemplo, voc\xea pode criar uma template string para exibir uma mensagem de sauda\xe7\xe3o personalizada com base no nome de usu\xe1rio fornecido:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const usuario = 'Maria';\nconst mensagem = `Ol\xe1, ${userName}! Bem-vindo(a) de volta.`;\n\nconsole.log(mensagem); // Sa\xedda: Ol\xe1, Maria! Bem-vindo(a) de volta.\n")),(0,r.kt)("p",null,"Observe como usamos a sintaxe ${} para incorporar a vari\xe1vel userName na string de sauda\xe7\xe3o. Ao usar uma template string, podemos facilmente criar strings mais complexas sem precisar concatenar v\xe1rias strings e vari\xe1veis."),(0,r.kt)("p",null,"Al\xe9m disso, as template strings tamb\xe9m oferecem suporte a v\xe1rias linhas, permitindo que voc\xea crie strings de v\xe1rias linhas sem precisar usar caracteres de escape ou concatenar v\xe1rias strings. Aqui est\xe1 um exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const multiplasLinhas = `\nEsta \xe9 uma string\nde v\xe1rias linhas\nque pode ser facilmente criada\nusando uma template string\n`;\n\nconsole.log(multiplasLinhas);\n")),(0,r.kt)("p",null,"Esse \xfaltimo exemplo de Template String resulta em algo como:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Esta \xe9 uma string\nde v\xe1rias linhas\nque pode ser facilmente criada\nusando uma template string\n")),(0,r.kt)("p",null,"Em s\xedntese, as Templates Strings s\xe3o uma adi\xe7\xe3o \xfatil \xe0 linguagem, permitindo que os desenvolvedores criem strings complexas com mais facilidade e legibilidade. Nada como ter a vida facilitada na hora de dar manuten\xe7\xe3o no nosso c\xf3digo. "),(0,r.kt)("h3",{id:"number"},"Number"),(0,r.kt)("p",null,"Um tipo de dado que representa valores num\xe9ricos. Os n\xfameros podem ser inteiros ou decimais."),(0,r.kt)("p",null,"Exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let quantidadeIngredientes = 5;\nlet precoSalada = 19.99;\n")),(0,r.kt)("h3",{id:"boolean"},"Boolean"),(0,r.kt)("p",null,"Um tipo de dado que representa verdadeiro ou falso."),(0,r.kt)("p",null,"Exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let ativo = true;\nlet logado = false;\n")),(0,r.kt)("h3",{id:"undefined"},"Undefined"),(0,r.kt)("p",null,"Um tipo de dado que representa a aus\xeancia de valor. Quando uma vari\xe1vel \xe9 declarada, mas n\xe3o atribu\xedda um valor, ela \xe9 undefined."),(0,r.kt)("p",null,"Exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let nomeSalada;\n")),(0,r.kt)("h3",{id:"null"},"Null"),(0,r.kt)("p",null,"Um tipo de dado que representa a aus\xeancia intencional de valor."),(0,r.kt)("p",null,"Exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let nomeSalada = null;\n")),(0,r.kt)("h3",{id:"symbol"},"Symbol"),(0,r.kt)("p",null,"Um tipo de dado que representa um identificador exclusivo."),(0,r.kt)("p",null,"Exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let simbolo = Symbol("id");\n')),(0,r.kt)("h3",{id:"objeto"},"Objeto"),(0,r.kt)("p",null,"Objeto \xe9 um tipo de dado que representa uma cole\xe7\xe3o de dados aninhados em uma estrutura espec\xedfica. Os objetos s\xe3o organizados por conjuntos de propriedades e valores, como no exemplo a seguir"),(0,r.kt)("p",null,"Exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let salada = {\n  nome: "Salada Dalas 2",\n  valor: 20.50,\n  ingredientes: "Pepino, Repolho, Tomate, alface"\n};\n')),(0,r.kt)("p",null,"O esqueleto de um objeto segue sempre a mesma sintaxe:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n    propriedade1: valor1,\n    propriedade2: valor2,\n    propriedadeN: valorN,\n}\n")),(0,r.kt)("p",null,"Os valores poss\xedveis para cada propriedade devem respeitar os tipos de dados do Javascript. Ent\xe3o, o exemplo do ",(0,r.kt)("strong",{parentName:"p"},"objeto salada")," nos mostra que:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"a vari\xe1vel ",(0,r.kt)("strong",{parentName:"li"},"salada")," \xe9 do tipo Object e armazena 3 propriedades (nome, valor, ingredientes);"),(0,r.kt)("li",{parentName:"ul"},"a propriedade ",(0,r.kt)("strong",{parentName:"li"},"nome")," tem um valor textual (String);"),(0,r.kt)("li",{parentName:"ul"},"a propriedade ",(0,r.kt)("strong",{parentName:"li"},"valor")," tem um valor num\xe9rico (Number);"),(0,r.kt)("li",{parentName:"ul"},"a propriedade ",(0,r.kt)("strong",{parentName:"li"},"ingredientes")," tem um valor textual (String);")),(0,r.kt)("h3",{id:"conclus\xe3o"},"Conclus\xe3o"),(0,r.kt)("p",null,"Al\xe9m dos tipos de dados primitivos e objeto, tamb\xe9m existem outros tipos de dados em JavaScript, como fun\xe7\xf5es, arrays, datas, dentre outros. \xc9 importante entender os diferentes tipos de dados em JavaScript para poder escrever c\xf3digo eficiente e correto. "),(0,r.kt)("p",null,"Nos exemplos que trouxemos para este material, nos momentos mais prop\xedcios, iremos retomar cada um dos tipos de dados e suas possibilidades. Por enquanto, \xe9 importante saber que a linguagem considera um tipo para cada dados que voc\xea manipula."))}u.isMDXComponent=!0},421:(e,a,o)=>{o.d(a,{Z:()=>s});const s=o.p+"assets/images/prototipo-dalas-3016ddaf8bb8cdcdc6bf9e0991d30214.jpg"},5140:(e,a,o)=>{o.d(a,{Z:()=>s});const s=o.p+"assets/images/variaveis-02c9bf804b148e162760ad0a18feb89d.jpg"}}]);