"use strict";(self.webpackChunkevandrofalleirosgh=self.webpackChunkevandrofalleirosgh||[]).push([[2071],{3905:(e,o,r)=>{r.d(o,{Zo:()=>c,kt:()=>g});var a=r(7294);function n(e,o,r){return o in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}function s(e,o){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);o&&(a=a.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),r.push.apply(r,a)}return r}function t(e){for(var o=1;o<arguments.length;o++){var r=null!=arguments[o]?arguments[o]:{};o%2?s(Object(r),!0).forEach((function(o){n(e,o,r[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(r,o))}))}return e}function i(e,o){if(null==e)return{};var r,a,n=function(e,o){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],o.indexOf(r)>=0||(n[r]=e[r]);return n}(e,o);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],o.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),u=function(e){var o=a.useContext(l),r=o;return e&&(r="function"==typeof e?e(o):t(t({},o),e)),r},c=function(e){var o=u(e.components);return a.createElement(l.Provider,{value:o},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var o=e.children;return a.createElement(a.Fragment,{},o)}},m=a.forwardRef((function(e,o){var r=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(r),m=n,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||s;return r?a.createElement(g,t(t({ref:o},c),{},{components:r})):a.createElement(g,t({ref:o},c))}));function g(e,o){var r=arguments,n=o&&o.mdxType;if("string"==typeof e||n){var s=r.length,t=new Array(s);t[0]=m;var i={};for(var l in o)hasOwnProperty.call(o,l)&&(i[l]=o[l]);i.originalType=e,i[p]="string"==typeof e?e:n,t[1]=i;for(var u=2;u<s;u++)t[u]=r[u];return a.createElement.apply(null,t)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5074:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>l,contentTitle:()=>t,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const s={sidebar_position:3},t="Operadores L\xf3gicos",i={unversionedId:"js-linguagem/tipos/operadores-logicos",id:"js-linguagem/tipos/operadores-logicos",title:"Operadores L\xf3gicos",description:"Os operadores l\xf3gicos em JavaScript s\xe3o usados para combinar ou negar express\xf5es booleanas e retornar um valor booleano como resultado. Eles s\xe3o frequentemente usados em instru\xe7\xf5es condicionais para avaliar se uma ou mais condi\xe7\xf5es s\xe3o verdadeiras ou falsas.",source:"@site/docs/js-linguagem/tipos/operadores-logicos.md",sourceDirName:"js-linguagem/tipos",slug:"/js-linguagem/tipos/operadores-logicos",permalink:"/docs/js-linguagem/tipos/operadores-logicos",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/js-linguagem/tipos/operadores-logicos.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Operadores Relacionais",permalink:"/docs/js-linguagem/tipos/operadores-relacionais"},next:{title:"Entrada e sa\xedda de dados",permalink:"/docs/js-linguagem/entrada-dados"}},l={},u=[],c={toc:u},p="wrapper";function d(e){let{components:o,...r}=e;return(0,n.kt)(p,(0,a.Z)({},c,r,{components:o,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"operadores-l\xf3gicos"},"Operadores L\xf3gicos"),(0,n.kt)("p",null,"Os operadores l\xf3gicos em JavaScript s\xe3o usados para combinar ou negar express\xf5es booleanas e retornar um valor booleano como resultado. Eles s\xe3o frequentemente usados em instru\xe7\xf5es condicionais para avaliar se uma ou mais condi\xe7\xf5es s\xe3o verdadeiras ou falsas."),(0,n.kt)("p",null,"Os operadores l\xf3gicos incluem:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"E l\xf3gico (&&)"),": Retorna verdadeiro se ambas as express\xf5es \xe0 esquerda e \xe0 direita forem verdadeiras.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"true && true; // true\ntrue && false; // false\nfalse && false; // false\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"OU l\xf3gico (||)"),": Retorna verdadeiro se pelo menos uma das express\xf5es \xe0 esquerda ou \xe0 direita for verdadeira.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"true || false; // true\nfalse || false; // false\ntrue || true; // true\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Nega\xe7\xe3o l\xf3gica (!)"),": Retorna o oposto do valor booleano da express\xe3o \xe0 direita.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"!true; // false\n!false; // true\n")),(0,n.kt)("p",null,"Os operadores l\xf3gicos s\xe3o frequentemente usados em conjunto com operadores relacionais para criar condi\xe7\xf5es mais complexas em instru\xe7\xf5es condicionais. Por exemplo, suponha que desejamos verificar se um n\xfamero est\xe1 entre 0 e 10 ou se \xe9 maior que 100. Podemos usar o operador OU l\xf3gico para combinar duas condi\xe7\xf5es:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'let numero = 15;\n\nif (numero >= 0 && numero <= 10 || numero > 100) {\n  console.log("O n\xfamero est\xe1 dentro do intervalo ou \xe9 maior que 100");\n} else {\n  console.log("O n\xfamero est\xe1 fora do intervalo e n\xe3o \xe9 maior que 100");\n}\n')),(0,n.kt)("p",null,"Nesse exemplo, o operador ",(0,n.kt)("strong",{parentName:"p"},"E l\xf3gico")," \xe9 usado para verificar se o n\xfamero est\xe1 entre 0 e 10 e o operador OU l\xf3gico \xe9 usado para combinar essa condi\xe7\xe3o com a condi\xe7\xe3o de que o n\xfamero \xe9 maior que 100."),(0,n.kt)("p",null,"Os operadores l\xf3gicos tamb\xe9m podem ser usados para negar express\xf5es booleanas. Por exemplo, podemos verificar se um n\xfamero n\xe3o est\xe1 entre 0 e 10 usando o operador E l\xf3gico e o operador de nega\xe7\xe3o l\xf3gica:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'let numero = 15;\n\nif (!(numero >= 0 && numero <= 10)) {\n  console.log("O n\xfamero est\xe1 fora do intervalo");\n} else {\n  console.log("O n\xfamero est\xe1 dentro do intervalo");\n}\n')),(0,n.kt)("p",null,"Nesse exemplo, a express\xe3o dentro do operador de nega\xe7\xe3o l\xf3gica retorna verdadeiro se o n\xfamero n\xe3o estiver entre 0 e 10, e falso caso contr\xe1rio. O operador de nega\xe7\xe3o l\xf3gica ent\xe3o inverte o valor booleano da express\xe3o, retornando verdadeiro se o n\xfamero estiver fora do intervalo e falso caso contr\xe1rio."),(0,n.kt)("p",null,"Esses s\xe3o apenas alguns exemplos dos operadores l\xf3gicos dispon\xedveis em JavaScript. Eles s\xe3o muito \xfateis para combinar ou negar express\xf5es booleanas e criar condi\xe7\xf5es mais complexas em instru\xe7\xf5es condicionais."))}d.isMDXComponent=!0}}]);